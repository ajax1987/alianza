<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.5</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.alianza</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>demo</name>
	<description>Alianza Demo project for Spring Boot and Angular</description>

	<properties>
		<java.version>17</java.version>
		<frontend-maven-plugin.version>1.12.1</frontend-maven-plugin.version>
		<node.version>v16.18.0</node.version>
		<yarn.version>v1.22.19</yarn.version>
	</properties>

	<dependencies>

		<!--<dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-security</artifactId> 
			</dependency> -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>8.0.32</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>6.0.2</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.9</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
	
		<profile>
			<id>demow</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>${frontend-maven-plugin.version}</version>
						<configuration>
							<workingDirectory>src/js</workingDirectory>
						</configuration>
						<executions>
							<execution>
								<id>install node</id>
								<goals>
									<goal>install-node-and-yarn</goal>
								</goals>
								<configuration>
									<nodeVersion>${node.version}</nodeVersion>
									<yarnVersion>${yarn.version}</yarnVersion>
								</configuration>
							</execution>
							<execution>
								<id>yarn install</id>
								<goals>
									<goal>yarn</goal>
								</goals>
								<phase>generate-resources</phase>
							</execution>
							<!--<execution> <id>yarn test</id> <goals> <goal>yarn</goal> </goals> 
								<phase>test</phase> <configuration> <arguments>test</arguments> <environmentVariables> 
								<CI>true</CI> </environmentVariables> </configuration> </execution> -->
							<execution>
								<id>yarn build</id>
								<goals>
									<goal>yarn</goal>
								</goals>
								<phase>compile</phase>
								<configuration>
									<arguments>build</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>process-classes</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/classes/static</outputDirectory>
									<resources>
										<resource>
											<directory>src/js/build</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<properties>
				<spring.profiles.active>
					demo
				</spring.profiles.active>
			</properties>
		</profile>
		
		<profile>
			<id>demo-compile-to-java-8</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>${frontend-maven-plugin.version}</version>
						<configuration>
							<workingDirectory>src/js</workingDirectory>
						</configuration>
						<executions>
							<execution>
								<id>install node</id>
								<goals>
									<goal>install-node-and-yarn</goal>
								</goals>
								<configuration>
									<nodeVersion>${node.version}</nodeVersion>
									<yarnVersion>${yarn.version}</yarnVersion>
								</configuration>
							</execution>
							<execution>
								<id>yarn install</id>
								<goals>
									<goal>yarn</goal>
								</goals>
								<phase>generate-resources</phase>
							</execution>
							<!--<execution> <id>yarn test</id> <goals> <goal>yarn</goal> </goals> 
								<phase>test</phase> <configuration> <arguments>test</arguments> <environmentVariables> 
								<CI>true</CI> </environmentVariables> </configuration> </execution> -->
							<execution>
								<id>yarn build</id>
								<goals>
									<goal>yarn</goal>
								</goals>
								<phase>compile</phase>
								<configuration>
									<arguments>build</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>process-classes</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/classes/static</outputDirectory>
									<resources>
										<resource>
											<directory>src/js/build</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<source>1.8</source>
							<target>1.8</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<spring.profiles.active>
					demo
				</spring.profiles.active>
			</properties>
		</profile>

		<profile>
			<id>demo</id>
			<build>
				<plugins>
					<!-- build Angular frontend resources -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>3.1.0</version>
						<executions>
							<execution>
								<id>front-end install</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>prepare-package</phase>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>install</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>front-end build</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>prepare-package</phase>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>run</argument>
										<argument>build</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<workingDirectory>${basedir}/src/js</workingDirectory>
						</configuration>
					</plugin>
					<!-- Copy Angular resources to Spring Boot resource files -->
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.1.0</version>
						<executions>

							<execution>
								<id>copy front-end assets</id>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<phase>prepare-package</phase>
								<configuration>
									<outputDirectory>${basedir}/src/main/resources/static</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/src/js/dist/demo-alianza-front</directory>
											<!--<excludes> <exclude>index.html</exclude> </excludes> -->
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy front-end assets to target</id>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<phase>prepare-package</phase>
								<configuration>
									<outputDirectory>${basedir}/target/classes/static</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/src/js/dist/demo-alianza-front</directory>
											<!--<excludes> <exclude>index.html</exclude> </excludes> -->
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Clean resources templates -->
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<version>3.2.0</version>
						<configuration>
							<filesets>
								<fileset>
									<directory>${basedir}/src/main/resources/static</directory>
									<followSymlinks>false</followSymlinks>
								</fileset>
								<fileset>
									<directory>${basedir}/src/main/resources/templates</directory>
									<includes>
										<include>index.html</include>
									</includes>
									<followSymlinks>false</followSymlinks>
								</fileset>
								<fileset>
									<directory>${basedir}/src/js/dist</directory>
									<includes>
										<include>**/*</include>
									</includes>

									<followSymlinks>false</followSymlinks>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<spring.profiles.active>
					demo
				</spring.profiles.active>
			</properties>
		</profile>
	</profiles>
</project>